[{"/Users/parssa/Desktop/repos/mixbot/src/index.js":"1","/Users/parssa/Desktop/repos/mixbot/src/App.js":"2","/Users/parssa/Desktop/repos/mixbot/src/reportWebVitals.js":"3","/Users/parssa/Desktop/repos/mixbot/src/TrackSelector.js":"4","/Users/parssa/Desktop/repos/mixbot/src/TrackFinder.js":"5","/Users/parssa/Desktop/repos/mixbot/src/Credentials.js":"6","/Users/parssa/Desktop/repos/mixbot/src/TrackPlayer.js":"7","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Detail.js":"8","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Listbox.js":"9","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Dropdown.js":"10","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Waveform.js":"11","/Users/parssa/Desktop/repos/mixbot/src/api/youtubeVideoContent.js":"12","/Users/parssa/Desktop/repos/mixbot/src/api/youtube.js":"13","/Users/parssa/Desktop/repos/mixbot/src/Deck.js":"14","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Knob.js":"15","/Users/parssa/Desktop/repos/mixbot/src/api/keys.js":"16","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Queue.js":"17"},{"size":500,"mtime":1609255907946,"results":"18","hashOfConfig":"19"},{"size":492,"mtime":1610168291738,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1609255907947,"results":"21","hashOfConfig":"19"},{"size":6074,"mtime":1610213689438,"results":"22","hashOfConfig":"19"},{"size":4553,"mtime":1610148996823,"results":"23","hashOfConfig":"19"},{"size":182,"mtime":1609255907943,"results":"24","hashOfConfig":"19"},{"size":10189,"mtime":1610236822606,"results":"25","hashOfConfig":"19"},{"size":570,"mtime":1609255907945,"results":"26","hashOfConfig":"19"},{"size":784,"mtime":1610146514577,"results":"27","hashOfConfig":"19"},{"size":550,"mtime":1609255907945,"results":"28","hashOfConfig":"19"},{"size":3782,"mtime":1609255907946,"results":"29","hashOfConfig":"19"},{"size":726,"mtime":1610209930339,"results":"30","hashOfConfig":"19"},{"size":494,"mtime":1610209919507,"results":"31","hashOfConfig":"19"},{"size":25782,"mtime":1610213321031,"results":"32","hashOfConfig":"19"},{"size":4780,"mtime":1609255907945,"results":"33","hashOfConfig":"19"},{"size":273,"mtime":1610209900514,"results":"34","hashOfConfig":"19"},{"size":415,"mtime":1610216081663,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11p3aqi",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/parssa/Desktop/repos/mixbot/src/index.js",[],["77","78"],"/Users/parssa/Desktop/repos/mixbot/src/App.js",["79","80"],"import React, {useState, useEffect} from 'react';\nimport './css_files/App.css';\nimport TrackSelector from \"./TrackSelector\";\n\nfunction App() {\n    return(\n        <div className={\"body\"}>\n            <div className={\"title\"}>\n                <h1>MIXBOT</h1>\n                 <div className={\"credits\"}>\n                    <h3>An Open Source project by Parssa Kyanzadeh</h3> \n                 </div>\n            </div>\n            <TrackSelector/>\n        </div>\n    );\n}\nexport default App;\n","/Users/parssa/Desktop/repos/mixbot/src/reportWebVitals.js",[],"/Users/parssa/Desktop/repos/mixbot/src/TrackSelector.js",["81","82","83","84"],"/Users/parssa/Desktop/repos/mixbot/src/TrackFinder.js",["85","86","87","88","89","90"],"import React, {useEffect, useState} from 'react';\nimport youtubeApi from './api/youtube'\nimport videoDetailFinder from './api/youtubeVideoContent'\nimport {parse, end, toSeconds, pattern} from 'iso8601-duration';\nimport ytdl from \"react-native-ytdl\";\n\n/**\n * This class handles finding a track based on song name, artists, and duration\n * and calls the foundSong prop when a song has been found.\n *\n * @param name: Name of the Song\n * @param artists: An array of artist objects\n * @param duration_ms: The duration of the song in milliseconds\n * @param foundSong: A prop that gets called when song has been found\n * @param trackID:\n */\nlet lastChosenID = \"\";\nexport default function TrackFinder({name, artists, duration_ms, foundSong, trackID, trackImage}) {\n\n    const [songName, setSongName] = useState(name);\n    const [songArtists, setSongArtists] = useState(artists);\n    const [duration, setDuration] = useState(duration_ms);\n    const [chosenVideoID, setChosenVideoID] = useState(\"\");\n\n    function createSearchQuery() {\n        console.log(\" -- Entered createSearchQuery -- \")\n        let artistNames = [];\n        artists.forEach(e => {\n            const thisName = e.name;\n            if (thisName) {\n                artistNames.push(thisName)\n            }\n        });\n        let searchQuery = name + \" by \" + artistNames[0];\n        console.log(\"SEARCH QUERY:\",searchQuery);\n        return searchQuery;\n    }\n\n\n    async function videosSearch(search) {\n        console.log(\"--- Entered videosSearch ---\")\n        const response = await youtubeApi.get(\"/search\", {\n            params:{\n                q:search\n            }\n        })\n        return response;\n    }\n\n    async function videoDetail(videoID) {\n        const response = await videoDetailFinder.get(\"/videos\", {\n            params:{\n                id:videoID\n            }\n        })\n        return response;\n    }\n\n    /**\n     * Searches YouTube for song using search query, breaks when found is song\n     * @param searchQuery\n     * @returns {Promise<void>}\n     */\n    async function getYoutubeVideo(searchQuery) {\n        videosSearch(searchQuery).then(async e => {\n            const videoList = e.data.items;\n            console.log(\"-- Entered getYoutubeVideo --\");\n            for (let video = 0; video < videoList.length; video++) {\n                const thisID = await videoDetail(videoList[video].id.videoId);\n                const thisDur = toMilli(thisID.data.items[0].contentDetails.duration);\n                if (Math.abs(duration - thisDur) <= 1000) {\n                    console.log(videoList[video]);\n                    setChosenVideoID(videoList[video].id.videoId);\n                    break;\n                }\n            }\n\n        }).finally(async () => {\n            if (chosenVideoID === \"\") {\n                // console.log(\"could not find song\");\n            } else {\n                // console.log(\"found song\")\n            }\n\n        })\n    }\n\n    /**\n     * Helper function for converting ISO8 8601 time to milliseconds\n     * @param ISO: ISO time\n     * @returns {the ISO time in milliseconds}\n     */\n    function toMilli(ISO) {\n        return toSeconds( parse(ISO) ) * 1000;\n    }\n\n    /**\n     * This effect triggers when the chosenVideoID is\n     * found, and then get the URL for mp3 download\n     *\n     * Since this effect gets called over once for the\n     * same video being found sometimes, it will not\n     * convert the video to mp3 if it has already been\n     * called once for this current song\n     * >> “ \"lastChosenID === \"\" ”\n     */\n    useEffect(() => {\n        console.log(\"| got youtube video ID, effect triggered | \")\n        if (chosenVideoID && lastChosenID === \"\") {\n            lastChosenID = chosenVideoID;\n            videoIDtoMP3(chosenVideoID);\n        }\n\n    }, [chosenVideoID])\n\n    useEffect(async () => {\n        console.log(\"----- entered fx\");\n        setSongArtists(artists);\n        setSongName(name);\n        setDuration(duration_ms);\n        lastChosenID = \"\";\n        const search = createSearchQuery();\n        await getYoutubeVideo(search);\n    }, [name, artists, duration_ms]);\n\n    async function videoIDtoMP3(videoID) {\n        console.log(\"-- Entered videoIDtoMP3 --\")\n        await ytdl.getInfo(videoID, { quality: 'highestaudio'}).then(info => {\n            let audioFormats = ytdl.filterFormats(info.formats, 'audioonly');\n            foundSong(songName, songArtists, duration, audioFormats[0].url, trackID, trackImage);\n            setChosenVideoID(\"\");\n        });\n    }\n\n    return null;\n}","/Users/parssa/Desktop/repos/mixbot/src/Credentials.js",[],"/Users/parssa/Desktop/repos/mixbot/src/TrackPlayer.js",["91","92","93","94","95","96","97"],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Detail.js",[],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Listbox.js",[],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Dropdown.js",["98"],"import React, {useState} from 'react';\n\nconst Dropdown = props => {\n\n    const dropdownChanged = e => {\n        props.changed(e.target.value);\n\n    }\n\n    return (\n        <div className=\"dropdown\">\n            <label>{props.label}</label>\n            <select value={props.selectedValue} onChange={dropdownChanged}>\n                <option key={0}>Select...</option>\n                {props.options.map((item, idx) => <option key={idx + 1} value={item.id}>{item.name}</option>)}\n            </select>\n        </div>\n    );\n}\n\nexport default Dropdown;\n","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Waveform.js",["99","100","101"],"import React, { useEffect, useRef, useState } from \"react\";\nimport WaveSurfer from 'wavesurfer.js';\n\n//https://codesandbox.io/s/audio-player-with-wavesurferjs-react-bd499?from-embed=&file=/src/Waveform.js:0-60\n\nexport default function Waveform({ url, onPositionChange, isPlaying, audioCtx, lowpassNum }) {\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlay] = useState(false);\n    const [volume, setVolume] = useState(0.5);\n    const formWaveSurferOptions = ref => ({\n        container: ref,\n        waveColor: \"#beb9b9\",\n        progressColor: \"#9a68c9\",\n        cursorColor: \"#dac4f0\",\n        hideScrollbar: true,\n        responsive: true,\n        partialRender: true,\n        normalize: true,\n        height:200\n    });\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n\n        const options = formWaveSurferOptions(waveformRef.current);\n        wavesurfer.current = WaveSurfer.create(options);\n        wavesurfer.current.load(url.src);\n        wavesurfer.current.on(\"ready\", function() {\n            // https://wavesurfer-js.org/docs/methods.html\n            // wavesurfer.current.play();\n            // setPlay(true);\n\n            // make sure object still available when file loaded\n            if (wavesurfer.current) {\n                wavesurfer.current.setVolume(volume);\n                setVolume(volume);\n            }\n            let lowpass = wavesurfer.backend.ac.createBiquadFilter();\n            lowpass.type = \"lowpass\";\n            lowpass.frequency.value = 10;\n            wavesurfer.current.backend.setFilter(lowpass);\n        });\n\n        // Removes events, elements and disconnects Web Audio nodes.\n        // when component unmount\n        return () => wavesurfer.current.destroy();\n    }, [url]);\n\n    useEffect(() => {\n        console.log(\"!!!\")\n        handlePlayPause();\n        console.log(wavesurfer.current.getFilters());\n        // if (isPlaying !== playing) {\n        //     handlePlayPause();\n        // }\n        // wavesurfer.current.on('audioprocess', function () {\n        //     // $('.waveform__counter').text( formatTime(wavesurfer.getCurrentTime()) );\n        //     // console.log(wavesurfer.current.getCurrentTime());\n        //     // console.log(\"--\")\n        //     onPositionChange(wavesurfer.current.getCurrentTime());\n        //\n        // });\n    }, [isPlaying]);\n\n    useEffect( () => {\n        console.log(\"lowpass\", lowpassNum);\n\n    }, [lowpassNum])\n\n\n    const handlePlayPause = () => {\n        console.log(\"switching this\");\n        setPlay(isPlaying);\n        wavesurfer.current.playPause();\n    };\n\n    // const onVolumeChange = e => {\n    //     const { target } = e;\n    //     const newVolume = +target.value;\n    //\n    //     if (newVolume) {\n    //         setVolume(newVolume);\n    //         wavesurfer.current.setVolume(newVolume || 1);\n    //     }\n    // };\n\n    return (\n        <div className={\"waveform-comp\"}>\n            <div id=\"waveform\" ref={waveformRef} />\n            <div className=\"controls\">\n                {/*<button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>*/}\n                {/*<input*/}\n                {/*    type=\"range\"*/}\n                {/*    id=\"volume\"*/}\n                {/*    name=\"volume\"*/}\n                {/*    // waveSurfer recognize value of `0` same as `1`*/}\n                {/*    //  so we need to set some zero-ish value for silence*/}\n                {/*    min=\"0.01\"*/}\n                {/*    max=\"1\"*/}\n                {/*    step=\".025\"*/}\n                {/*    onChange={onVolumeChange}*/}\n                {/*    defaultValue={volume}*/}\n                {/*/>*/}\n            </div>\n        </div>\n    );\n}",["102","103"],"/Users/parssa/Desktop/repos/mixbot/src/api/youtubeVideoContent.js",[],"/Users/parssa/Desktop/repos/mixbot/src/api/youtube.js",[],"/Users/parssa/Desktop/repos/mixbot/src/Deck.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Knob.js",[],"/Users/parssa/Desktop/repos/mixbot/src/api/keys.js",["122","123"],"const youtubeKey1 = \"AIzaSyC6F5gJnOX3mS2dl5-b_82PQ2ow7Xikuw8\"; // NotMixBot\n\nconst youtubeKey2 = \"AIzaSyCt7QrJ3-iInh6822WGi3Igo8J9gpH2WyA\"; // ThirdBot\n\nconst youtubeKey3 = \"AIzaSyBpT_RmX3P3wp_OMxiJT0SZIhkqFwMfVrA\"; // not set up yet\n\nexport const currentKey = youtubeKey1;","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Queue.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":1,"column":26,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"133","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":16},{"ruleId":"128","severity":1,"message":"134","line":10,"column":7,"nodeType":"130","messageId":"131","endLine":10,"endColumn":18},{"ruleId":"128","severity":1,"message":"135","line":47,"column":14,"nodeType":"130","messageId":"131","endLine":47,"endColumn":26},{"ruleId":"128","severity":1,"message":"136","line":64,"column":14,"nodeType":"130","messageId":"131","endLine":64,"endColumn":29},{"ruleId":"128","severity":1,"message":"137","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"138","line":4,"column":16,"nodeType":"130","messageId":"131","endLine":4,"endColumn":19},{"ruleId":"128","severity":1,"message":"139","line":4,"column":32,"nodeType":"130","messageId":"131","endLine":4,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":114,"column":8,"nodeType":"142","endLine":114,"endColumn":23,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":116,"column":15,"nodeType":"145","endLine":124,"endColumn":6},{"ruleId":"140","severity":1,"message":"146","line":124,"column":8,"nodeType":"142","endLine":124,"endColumn":36,"suggestions":"147"},{"ruleId":"128","severity":1,"message":"148","line":33,"column":5,"nodeType":"130","messageId":"131","endLine":33,"endColumn":18},{"ruleId":"140","severity":1,"message":"149","line":66,"column":5,"nodeType":"130","endLine":66,"endColumn":14,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"151","line":165,"column":21,"nodeType":"130","messageId":"131","endLine":165,"endColumn":43},{"ruleId":"152","severity":1,"message":"153","line":227,"column":27,"nodeType":"154","messageId":"155","endLine":227,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":227,"column":47,"nodeType":"154","messageId":"155","endLine":227,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":231,"column":27,"nodeType":"154","messageId":"155","endLine":231,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":231,"column":47,"nodeType":"154","messageId":"155","endLine":231,"endColumn":49},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"156","line":9,"column":12,"nodeType":"130","messageId":"131","endLine":9,"endColumn":19},{"ruleId":"140","severity":1,"message":"157","line":50,"column":8,"nodeType":"142","endLine":50,"endColumn":13,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"159","line":66,"column":8,"nodeType":"142","endLine":66,"endColumn":19,"suggestions":"160"},{"ruleId":"124","replacedBy":"161"},{"ruleId":"126","replacedBy":"162"},{"ruleId":"128","severity":1,"message":"163","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":12},{"ruleId":"164","severity":1,"message":"165","line":121,"column":13,"nodeType":"166","endLine":121,"endColumn":23},{"ruleId":"152","severity":1,"message":"167","line":165,"column":93,"nodeType":"154","messageId":"155","endLine":165,"endColumn":95},{"ruleId":"128","severity":1,"message":"168","line":244,"column":13,"nodeType":"130","messageId":"131","endLine":244,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":361,"column":49,"nodeType":"154","messageId":"155","endLine":361,"endColumn":51},{"ruleId":"152","severity":1,"message":"153","line":361,"column":90,"nodeType":"154","messageId":"155","endLine":361,"endColumn":92},{"ruleId":"152","severity":1,"message":"153","line":361,"column":129,"nodeType":"154","messageId":"155","endLine":361,"endColumn":131},{"ruleId":"152","severity":1,"message":"153","line":366,"column":55,"nodeType":"154","messageId":"155","endLine":366,"endColumn":57},{"ruleId":"164","severity":1,"message":"165","line":381,"column":9,"nodeType":"166","endLine":381,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":581,"column":13,"nodeType":"166","endLine":581,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":582,"column":13,"nodeType":"166","endLine":582,"endColumn":45},{"ruleId":"164","severity":1,"message":"165","line":585,"column":13,"nodeType":"166","endLine":585,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":586,"column":13,"nodeType":"166","endLine":586,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":588,"column":13,"nodeType":"166","endLine":588,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":589,"column":13,"nodeType":"166","endLine":589,"endColumn":45},{"ruleId":"164","severity":1,"message":"165","line":590,"column":13,"nodeType":"166","endLine":590,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":591,"column":13,"nodeType":"166","endLine":591,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":615,"column":9,"nodeType":"166","endLine":615,"endColumn":41},{"ruleId":"128","severity":1,"message":"169","line":3,"column":7,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"170","line":5,"column":7,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'euroHouseID' is assigned a value but never used.","'genreChanged' is defined but never used.","'playlistChanged' is defined but never used.","'React' is defined but never used.","'end' is defined but never used.","'pattern' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoIDtoMP3'. Either include it or remove the dependency array.","ArrayExpression",["173"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'createSearchQuery' and 'getYoutubeVideo'. Either include them or remove the dependency array.",["174"],"'deck1playtime' is assigned a value but never used.","React Hook useEffect contains a call to 'setClock'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [clock] as a second argument to the useEffect Hook.",["175"],"'playDeck2SongScheduled' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'playing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'volume'. Either include it or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["176"],"React Hook useEffect has a missing dependency: 'handlePlayPause'. Either include it or remove the dependency array.",["177"],["171"],["172"],"'Knob' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Expected '!==' and instead saw '!='.","'currSection' is assigned a value but never used.","'youtubeKey2' is assigned a value but never used.","'youtubeKey3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [chosenVideoID, videoIDtoMP3]",{"range":"188","text":"189"},"Update the dependencies array to be: [name, artists, duration_ms, createSearchQuery, getYoutubeVideo]",{"range":"190","text":"191"},"Add dependencies array: [clock]",{"range":"192","text":"193"},"Update the dependencies array to be: [url, volume]",{"range":"194","text":"195"},"Update the dependencies array to be: [handlePlayPause, isPlaying]",{"range":"196","text":"197"},[3800,3815],"[chosenVideoID, videoIDtoMP3]",[4098,4126],"[name, artists, duration_ms, createSearchQuery, getYoutubeVideo]",[2194,2194],", [clock]",[1849,1854],"[url, volume]",[2436,2447],"[handlePlayPause, isPlaying]"]