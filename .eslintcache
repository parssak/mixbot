[{"/Users/parssa/Desktop/repos/mixbot/src/index.js":"1","/Users/parssa/Desktop/repos/mixbot/src/App.js":"2","/Users/parssa/Desktop/repos/mixbot/src/reportWebVitals.js":"3","/Users/parssa/Desktop/repos/mixbot/src/TrackSelector.js":"4","/Users/parssa/Desktop/repos/mixbot/src/TrackFinder.js":"5","/Users/parssa/Desktop/repos/mixbot/src/Credentials.js":"6","/Users/parssa/Desktop/repos/mixbot/src/TrackPlayer.js":"7","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Detail.js":"8","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Listbox.js":"9","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Dropdown.js":"10","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Waveform.js":"11","/Users/parssa/Desktop/repos/mixbot/src/api/youtubeVideoContent.js":"12","/Users/parssa/Desktop/repos/mixbot/src/api/youtube.js":"13","/Users/parssa/Desktop/repos/mixbot/src/Deck.js":"14","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Knob.js":"15"},{"size":500,"mtime":1609255907946,"results":"16","hashOfConfig":"17"},{"size":261,"mtime":1609255907942,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609255907947,"results":"19","hashOfConfig":"17"},{"size":6703,"mtime":1610126247725,"results":"20","hashOfConfig":"17"},{"size":4529,"mtime":1609964844333,"results":"21","hashOfConfig":"17"},{"size":182,"mtime":1609255907943,"results":"22","hashOfConfig":"17"},{"size":11057,"mtime":1610133366313,"results":"23","hashOfConfig":"17"},{"size":570,"mtime":1609255907945,"results":"24","hashOfConfig":"17"},{"size":588,"mtime":1609255907945,"results":"25","hashOfConfig":"17"},{"size":550,"mtime":1609255907945,"results":"26","hashOfConfig":"17"},{"size":3782,"mtime":1609255907946,"results":"27","hashOfConfig":"17"},{"size":439,"mtime":1609255907944,"results":"28","hashOfConfig":"17"},{"size":453,"mtime":1609255907944,"results":"29","hashOfConfig":"17"},{"size":30927,"mtime":1610134751202,"results":"30","hashOfConfig":"17"},{"size":4780,"mtime":1609255907945,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"11p3aqi",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/parssa/Desktop/repos/mixbot/src/index.js",[],["67","68"],"/Users/parssa/Desktop/repos/mixbot/src/App.js",["69","70"],"import React, {useState, useEffect} from 'react';\nimport './css_files/App.css';\nimport TrackSelector from \"./TrackSelector\";\n\nfunction App() {\n    return(\n        <div className={\"body\"}>\n            <TrackSelector/>\n        </div>\n    );\n}\nexport default App;\n","/Users/parssa/Desktop/repos/mixbot/src/reportWebVitals.js",[],"/Users/parssa/Desktop/repos/mixbot/src/TrackSelector.js",["71"],"/Users/parssa/Desktop/repos/mixbot/src/TrackFinder.js",["72","73","74","75","76","77"],"import React, {useEffect, useState} from 'react';\nimport youtubeApi from './api/youtube'\nimport videoDetailFinder from './api/youtubeVideoContent'\nimport {parse, end, toSeconds, pattern} from 'iso8601-duration';\nimport ytdl from \"react-native-ytdl\";\n\n/**\n * This class handles finding a track based on song name, artists, and duration\n * and calls the foundSong prop when a song has been found.\n *\n * @param name: Name of the Song\n * @param artists: An array of artist objects\n * @param duration_ms: The duration of the song in milliseconds\n * @param foundSong: A prop that gets called when song has been found\n * @param trackID:\n */\nlet lastChosenID = \"\";\nexport default function TrackFinder({name, artists, duration_ms, foundSong, trackID}) {\n\n    const [songName, setSongName] = useState(name);\n    const [songArtists, setSongArtists] = useState(artists);\n    const [duration, setDuration] = useState(duration_ms);\n    const [chosenVideoID, setChosenVideoID] = useState(\"\");\n\n    function createSearchQuery() {\n        console.log(\" -- Entered createSearchQuery -- \")\n        let artistNames = [];\n        artists.forEach(e => {\n            const thisName = e.name;\n            if (thisName) {\n                artistNames.push(thisName)\n            }\n        });\n        let searchQuery = name + \" by \" + artistNames[0];\n        console.log(\"SEARCH QUERY:\",searchQuery);\n        return searchQuery;\n    }\n\n\n    async function videosSearch(search) {\n        console.log(\"--- Entered videosSearch ---\")\n        const response = await youtubeApi.get(\"/search\", {\n            params:{\n                q:search\n            }\n        })\n        return response;\n    }\n\n    async function videoDetail(videoID) {\n        const response = await videoDetailFinder.get(\"/videos\", {\n            params:{\n                id:videoID\n            }\n        })\n        return response;\n    }\n\n    /**\n     * Searches YouTube for song using search query, breaks when found is song\n     * @param searchQuery\n     * @returns {Promise<void>}\n     */\n    async function getYoutubeVideo(searchQuery) {\n        videosSearch(searchQuery).then(async e => {\n            const videoList = e.data.items;\n            console.log(\"-- Entered getYoutubeVideo --\");\n            for (let video = 0; video < videoList.length; video++) {\n                const thisID = await videoDetail(videoList[video].id.videoId);\n                const thisDur = toMilli(thisID.data.items[0].contentDetails.duration);\n                if (Math.abs(duration - thisDur) <= 1000) {\n                    console.log(videoList[video]);\n                    setChosenVideoID(videoList[video].id.videoId);\n                    break;\n                }\n            }\n\n        }).finally(async () => {\n            if (chosenVideoID === \"\") {\n                // console.log(\"could not find song\");\n            } else {\n                // console.log(\"found song\")\n            }\n\n        })\n    }\n\n    /**\n     * Helper function for converting ISO8 8601 time to milliseconds\n     * @param ISO: ISO time\n     * @returns {the ISO time in milliseconds}\n     */\n    function toMilli(ISO) {\n        return toSeconds( parse(ISO) ) * 1000;\n    }\n\n    /**\n     * This effect triggers when the chosenVideoID is\n     * found, and then get the URL for mp3 download\n     *\n     * Since this effect gets called over once for the\n     * same video being found sometimes, it will not\n     * convert the video to mp3 if it has already been\n     * called once for this current song\n     * >> “ \"lastChosenID === \"\" ”\n     */\n    useEffect(() => {\n        console.log(\"| got youtube video ID, effect triggered | \")\n        if (chosenVideoID && lastChosenID === \"\") {\n            lastChosenID = chosenVideoID;\n            videoIDtoMP3(chosenVideoID);\n        }\n\n    }, [chosenVideoID])\n\n    useEffect(async () => {\n        console.log(\"----- entered fx\");\n        setSongArtists(artists);\n        setSongName(name);\n        setDuration(duration_ms);\n        lastChosenID = \"\";\n        const search = createSearchQuery();\n        await getYoutubeVideo(search);\n    }, [name, artists, duration_ms]);\n\n    async function videoIDtoMP3(videoID) {\n        console.log(\"-- Entered videoIDtoMP3 --\")\n        await ytdl.getInfo(videoID, { quality: 'highestaudio'}).then(info => {\n            let audioFormats = ytdl.filterFormats(info.formats, 'audioonly');\n            foundSong(songName, songArtists, duration, audioFormats[0].url, trackID);\n            setChosenVideoID(\"\");\n        });\n    }\n\n    return null;\n}","/Users/parssa/Desktop/repos/mixbot/src/Credentials.js",[],"/Users/parssa/Desktop/repos/mixbot/src/TrackPlayer.js",["78","79","80","81","82"],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Detail.js",[],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Listbox.js",[],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Dropdown.js",["83"],"import React, {useState} from 'react';\n\nconst Dropdown = props => {\n\n    const dropdownChanged = e => {\n        props.changed(e.target.value);\n\n    }\n\n    return (\n        <div className=\"dropdown\">\n            <label>{props.label}</label>\n            <select value={props.selectedValue} onChange={dropdownChanged}>\n                <option key={0}>Select...</option>\n                {props.options.map((item, idx) => <option key={idx + 1} value={item.id}>{item.name}</option>)}\n            </select>\n        </div>\n    );\n}\n\nexport default Dropdown;\n","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Waveform.js",["84","85","86"],"import React, { useEffect, useRef, useState } from \"react\";\nimport WaveSurfer from 'wavesurfer.js';\n\n//https://codesandbox.io/s/audio-player-with-wavesurferjs-react-bd499?from-embed=&file=/src/Waveform.js:0-60\n\nexport default function Waveform({ url, onPositionChange, isPlaying, audioCtx, lowpassNum }) {\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlay] = useState(false);\n    const [volume, setVolume] = useState(0.5);\n    const formWaveSurferOptions = ref => ({\n        container: ref,\n        waveColor: \"#beb9b9\",\n        progressColor: \"#9a68c9\",\n        cursorColor: \"#dac4f0\",\n        hideScrollbar: true,\n        responsive: true,\n        partialRender: true,\n        normalize: true,\n        height:200\n    });\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n\n        const options = formWaveSurferOptions(waveformRef.current);\n        wavesurfer.current = WaveSurfer.create(options);\n        wavesurfer.current.load(url.src);\n        wavesurfer.current.on(\"ready\", function() {\n            // https://wavesurfer-js.org/docs/methods.html\n            // wavesurfer.current.play();\n            // setPlay(true);\n\n            // make sure object still available when file loaded\n            if (wavesurfer.current) {\n                wavesurfer.current.setVolume(volume);\n                setVolume(volume);\n            }\n            let lowpass = wavesurfer.backend.ac.createBiquadFilter();\n            lowpass.type = \"lowpass\";\n            lowpass.frequency.value = 10;\n            wavesurfer.current.backend.setFilter(lowpass);\n        });\n\n        // Removes events, elements and disconnects Web Audio nodes.\n        // when component unmount\n        return () => wavesurfer.current.destroy();\n    }, [url]);\n\n    useEffect(() => {\n        console.log(\"!!!\")\n        handlePlayPause();\n        console.log(wavesurfer.current.getFilters());\n        // if (isPlaying !== playing) {\n        //     handlePlayPause();\n        // }\n        // wavesurfer.current.on('audioprocess', function () {\n        //     // $('.waveform__counter').text( formatTime(wavesurfer.getCurrentTime()) );\n        //     // console.log(wavesurfer.current.getCurrentTime());\n        //     // console.log(\"--\")\n        //     onPositionChange(wavesurfer.current.getCurrentTime());\n        //\n        // });\n    }, [isPlaying]);\n\n    useEffect( () => {\n        console.log(\"lowpass\", lowpassNum);\n\n    }, [lowpassNum])\n\n\n    const handlePlayPause = () => {\n        console.log(\"switching this\");\n        setPlay(isPlaying);\n        wavesurfer.current.playPause();\n    };\n\n    // const onVolumeChange = e => {\n    //     const { target } = e;\n    //     const newVolume = +target.value;\n    //\n    //     if (newVolume) {\n    //         setVolume(newVolume);\n    //         wavesurfer.current.setVolume(newVolume || 1);\n    //     }\n    // };\n\n    return (\n        <div className={\"waveform-comp\"}>\n            <div id=\"waveform\" ref={waveformRef} />\n            <div className=\"controls\">\n                {/*<button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>*/}\n                {/*<input*/}\n                {/*    type=\"range\"*/}\n                {/*    id=\"volume\"*/}\n                {/*    name=\"volume\"*/}\n                {/*    // waveSurfer recognize value of `0` same as `1`*/}\n                {/*    //  so we need to set some zero-ish value for silence*/}\n                {/*    min=\"0.01\"*/}\n                {/*    max=\"1\"*/}\n                {/*    step=\".025\"*/}\n                {/*    onChange={onVolumeChange}*/}\n                {/*    defaultValue={volume}*/}\n                {/*/>*/}\n            </div>\n        </div>\n    );\n}","/Users/parssa/Desktop/repos/mixbot/src/api/youtubeVideoContent.js",[],"/Users/parssa/Desktop/repos/mixbot/src/api/youtube.js",[],"/Users/parssa/Desktop/repos/mixbot/src/Deck.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Knob.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"124","line":1,"column":26,"nodeType":"122","messageId":"123","endLine":1,"endColumn":35},{"ruleId":"120","severity":1,"message":"125","line":10,"column":7,"nodeType":"122","messageId":"123","endLine":10,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"127","line":4,"column":16,"nodeType":"122","messageId":"123","endLine":4,"endColumn":19},{"ruleId":"120","severity":1,"message":"128","line":4,"column":32,"nodeType":"122","messageId":"123","endLine":4,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":114,"column":8,"nodeType":"131","endLine":114,"endColumn":23,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":116,"column":15,"nodeType":"134","endLine":124,"endColumn":6},{"ruleId":"129","severity":1,"message":"135","line":124,"column":8,"nodeType":"131","endLine":124,"endColumn":36,"suggestions":"136"},{"ruleId":"120","severity":1,"message":"137","line":7,"column":7,"nodeType":"122","messageId":"123","endLine":7,"endColumn":19},{"ruleId":"120","severity":1,"message":"138","line":32,"column":5,"nodeType":"122","messageId":"123","endLine":32,"endColumn":18},{"ruleId":"129","severity":1,"message":"139","line":65,"column":5,"nodeType":"122","endLine":65,"endColumn":14,"suggestions":"140"},{"ruleId":"120","severity":1,"message":"141","line":148,"column":14,"nodeType":"122","messageId":"123","endLine":148,"endColumn":32},{"ruleId":"120","severity":1,"message":"142","line":165,"column":14,"nodeType":"122","messageId":"123","endLine":165,"endColumn":32},{"ruleId":"120","severity":1,"message":"121","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"143","line":9,"column":12,"nodeType":"122","messageId":"123","endLine":9,"endColumn":19},{"ruleId":"129","severity":1,"message":"144","line":50,"column":8,"nodeType":"131","endLine":50,"endColumn":13,"suggestions":"145"},{"ruleId":"129","severity":1,"message":"146","line":66,"column":8,"nodeType":"131","endLine":66,"endColumn":19,"suggestions":"147"},{"ruleId":"120","severity":1,"message":"148","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":18},{"ruleId":"120","severity":1,"message":"149","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":19},{"ruleId":"120","severity":1,"message":"127","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":13},{"ruleId":"120","severity":1,"message":"150","line":9,"column":7,"nodeType":"122","messageId":"123","endLine":9,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":132,"column":13,"nodeType":"153","endLine":132,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":177,"column":93,"nodeType":"156","messageId":"157","endLine":177,"endColumn":95},{"ruleId":"120","severity":1,"message":"158","line":199,"column":13,"nodeType":"122","messageId":"123","endLine":199,"endColumn":16},{"ruleId":"120","severity":1,"message":"159","line":200,"column":13,"nodeType":"122","messageId":"123","endLine":200,"endColumn":20},{"ruleId":"120","severity":1,"message":"160","line":235,"column":13,"nodeType":"122","messageId":"123","endLine":235,"endColumn":27},{"ruleId":"120","severity":1,"message":"161","line":242,"column":13,"nodeType":"122","messageId":"123","endLine":242,"endColumn":26},{"ruleId":"120","severity":1,"message":"162","line":245,"column":13,"nodeType":"122","messageId":"123","endLine":245,"endColumn":27},{"ruleId":"120","severity":1,"message":"163","line":323,"column":21,"nodeType":"122","messageId":"123","endLine":323,"endColumn":40},{"ruleId":"120","severity":1,"message":"164","line":329,"column":17,"nodeType":"122","messageId":"123","endLine":329,"endColumn":34},{"ruleId":"120","severity":1,"message":"165","line":334,"column":21,"nodeType":"122","messageId":"123","endLine":334,"endColumn":44},{"ruleId":"120","severity":1,"message":"166","line":341,"column":17,"nodeType":"122","messageId":"123","endLine":341,"endColumn":38},{"ruleId":"154","severity":1,"message":"167","line":429,"column":49,"nodeType":"156","messageId":"157","endLine":429,"endColumn":51},{"ruleId":"154","severity":1,"message":"167","line":429,"column":90,"nodeType":"156","messageId":"157","endLine":429,"endColumn":92},{"ruleId":"154","severity":1,"message":"167","line":429,"column":129,"nodeType":"156","messageId":"157","endLine":429,"endColumn":131},{"ruleId":"154","severity":1,"message":"167","line":434,"column":55,"nodeType":"156","messageId":"157","endLine":434,"endColumn":57},{"ruleId":"151","severity":1,"message":"152","line":449,"column":9,"nodeType":"153","endLine":449,"endColumn":32},{"ruleId":"151","severity":1,"message":"152","line":683,"column":13,"nodeType":"153","endLine":683,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":684,"column":13,"nodeType":"153","endLine":684,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":688,"column":13,"nodeType":"153","endLine":688,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":689,"column":13,"nodeType":"153","endLine":689,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":692,"column":13,"nodeType":"153","endLine":692,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":693,"column":13,"nodeType":"153","endLine":693,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":694,"column":13,"nodeType":"153","endLine":694,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":695,"column":13,"nodeType":"153","endLine":695,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":719,"column":9,"nodeType":"153","endLine":719,"endColumn":41},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'euroHouseID' is assigned a value but never used.","'React' is defined but never used.","'end' is defined but never used.","'pattern' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoIDtoMP3'. Either include it or remove the dependency array.","ArrayExpression",["170"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'createSearchQuery' and 'getYoutubeVideo'. Either include them or remove the dependency array.",["171"],"'silenceTrack' is assigned a value but never used.","'deck1playtime' is assigned a value but never used.","React Hook useEffect contains a call to 'setClock'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [clock] as a second argument to the useEffect Hook.",["172"],"'setDeckOnePlaytime' is defined but never used.","'setDeckTwoPlaytime' is defined but never used.","'playing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'volume'. Either include it or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["173"],"React Hook useEffect has a missing dependency: 'handlePlayPause'. Either include it or remove the dependency array.",["174"],"'Joystick' is defined but never used.","'Draggable' is defined but never used.","'tempTrack' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'bpm' is assigned a value but never used.","'timeSig' is assigned a value but never used.","'actuallength32' is assigned a value but never used.","'startingPoint' is assigned a value but never used.","'songBeginPoint' is assigned a value but never used.","'firstDropConfidence' is assigned a value but never used.","'sumDropConfidence' is assigned a value but never used.","'firstComedownConfidence' is assigned a value but never used.","'sumComedownConfidence' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [chosenVideoID, videoIDtoMP3]",{"range":"185","text":"186"},"Update the dependencies array to be: [name, artists, duration_ms, createSearchQuery, getYoutubeVideo]",{"range":"187","text":"188"},"Add dependencies array: [clock]",{"range":"189","text":"190"},"Update the dependencies array to be: [url, volume]",{"range":"191","text":"192"},"Update the dependencies array to be: [handlePlayPause, isPlaying]",{"range":"193","text":"194"},[3788,3803],"[chosenVideoID, videoIDtoMP3]",[4086,4114],"[name, artists, duration_ms, createSearchQuery, getYoutubeVideo]",[2172,2172],", [clock]",[1849,1854],"[url, volume]",[2436,2447],"[handlePlayPause, isPlaying]"]