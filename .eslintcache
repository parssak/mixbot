[{"/Users/parssa/Desktop/repos/mixbot/src/index.js":"1","/Users/parssa/Desktop/repos/mixbot/src/App.js":"2","/Users/parssa/Desktop/repos/mixbot/src/reportWebVitals.js":"3","/Users/parssa/Desktop/repos/mixbot/src/TrackSelector.js":"4","/Users/parssa/Desktop/repos/mixbot/src/TrackFinder.js":"5","/Users/parssa/Desktop/repos/mixbot/src/Credentials.js":"6","/Users/parssa/Desktop/repos/mixbot/src/TrackPlayer.js":"7","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Detail.js":"8","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Listbox.js":"9","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Dropdown.js":"10","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Waveform.js":"11","/Users/parssa/Desktop/repos/mixbot/src/api/youtubeVideoContent.js":"12","/Users/parssa/Desktop/repos/mixbot/src/api/youtube.js":"13","/Users/parssa/Desktop/repos/mixbot/src/Deck.js":"14","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Knob.js":"15","/Users/parssa/Desktop/repos/mixbot/src/api/keys.js":"16","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Queue.js":"17","/Users/parssa/Desktop/repos/mixbot/src/Mixbot.js":"18","/Users/parssa/Desktop/repos/mixbot/src/Brain.js":"19","/Users/parssa/Desktop/repos/mixbot/src/helper_classes/Analyzer.js":"20"},{"size":500,"mtime":1609255907946,"results":"21","hashOfConfig":"22"},{"size":472,"mtime":1610317230984,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1609255907947,"results":"24","hashOfConfig":"22"},{"size":5653,"mtime":1610321620674,"results":"25","hashOfConfig":"22"},{"size":4500,"mtime":1610324094583,"results":"26","hashOfConfig":"22"},{"size":182,"mtime":1609255907943,"results":"27","hashOfConfig":"22"},{"size":9346,"mtime":1610322450870,"results":"28","hashOfConfig":"22"},{"size":570,"mtime":1609255907945,"results":"29","hashOfConfig":"22"},{"size":814,"mtime":1610305380930,"results":"30","hashOfConfig":"22"},{"size":550,"mtime":1609255907945,"results":"31","hashOfConfig":"22"},{"size":3782,"mtime":1609255907946,"results":"32","hashOfConfig":"22"},{"size":767,"mtime":1610248130668,"results":"33","hashOfConfig":"22"},{"size":535,"mtime":1610299742890,"results":"34","hashOfConfig":"22"},{"size":25369,"mtime":1610325939124,"results":"35","hashOfConfig":"22"},{"size":4780,"mtime":1609255907945,"results":"36","hashOfConfig":"22"},{"size":273,"mtime":1610323452825,"results":"37","hashOfConfig":"22"},{"size":415,"mtime":1610216081663,"results":"38","hashOfConfig":"22"},{"size":2678,"mtime":1610324659150,"results":"39","hashOfConfig":"22"},{"size":257,"mtime":1610318634231,"results":"40","hashOfConfig":"22"},{"size":7874,"mtime":1610325906719,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11p3aqi",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/parssa/Desktop/repos/mixbot/src/index.js",[],["90","91"],"/Users/parssa/Desktop/repos/mixbot/src/App.js",["92","93"],"import React, {useState, useEffect} from 'react';\nimport './css_files/App.css';\nimport Mixbot from './Mixbot';\n\n\nfunction App() {\n    return(\n        <div className={\"body\"}>\n            <div className={\"title\"}>\n                <h1>MIXBOT</h1>\n                 <div className={\"credits\"}>\n                    <h3>An Open Source project by Parssa Kyanzadeh</h3> \n                 </div>\n            </div>\n            <Mixbot/>\n        </div>\n    );\n}\nexport default App;\n","/Users/parssa/Desktop/repos/mixbot/src/reportWebVitals.js",[],"/Users/parssa/Desktop/repos/mixbot/src/TrackSelector.js",["94","95","96","97","98"],"import React, { useState, useEffect } from 'react';\nimport Dropdown from \"./frontend_components/Dropdown\";\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\nimport Listbox from \"./frontend_components/Listbox\";\nimport Detail from \"./frontend_components/Detail\";\nimport TrackFinder from \"./TrackFinder\";\nimport { nextSongInQueue, thoughtType, trackAlreadyIn} from \"./Mixbot\";\n\nconst euroHouseID = \"2818tC1Ba59cftJJqjWKZi\";\n\nfunction TrackSelector({newThought, addToQueue}) {\n    const spotify = Credentials();\n    const [token, setToken] = useState('');\n    const [genres, setGenres] = useState({ selectedGenre: '', listOfGenresFromAPI: [] });\n    const [playlist, setPlaylist] = useState({ selectedPlaylist: euroHouseID, listOfPlaylistFromAPI: [] });\n    const [tracks, setTracks] = useState({ selectedTrack: '', listOfTracksFromAPI: [] });\n    const [trackDetail, setTrackDetail] = useState(null);\n\n    useEffect(() => {\n        axios('https://accounts.spotify.com/api/token', {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization': 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n            },\n            data: 'grant_type=client_credentials',\n            method: 'POST'\n        })\n            .then(tokenResponse => {\n                setToken(tokenResponse.data.access_token);\n                // axios('https://api.spotify.com/v1/browse/categories', {\n                //     method: 'GET',\n                //     headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n                // })\n                //     .then (genreResponse => {\n                //         console.log(genreResponse)\n                //         setGenres({\n                //             selectedGenre: genres.selectedGenre,\n                //             listOfGenresFromAPI: genreResponse.data.categories.items\n                //         })\n                //     });\n\n            });\n\n    }, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\n    function genreChanged(val) {\n        setGenres({\n            selectedGenre: val,\n            listOfGenresFromAPI: genres.listOfGenresFromAPI\n        });\n\n        axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=30`, {\n            method: 'GET',\n            headers: { 'Authorization': 'Bearer ' + token }\n        }).then(playlistResponse => {\n            setPlaylist({\n                selectedPlaylist: playlist.selectedPlaylist,\n                listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n            })\n        });\n    }\n\n    function playlistChanged(val) {\n        setPlaylist({\n            selectedPlaylist: val,\n            listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n        });\n    }\n\n    function playlistSearchClicked(e) {\n        e.preventDefault();\n        console.log(\"selected playlist was\" + playlist.selectedPlaylist);\n        axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=40`, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(tracksResponse => {\n            setTracks({\n                selectedTrack: tracks.selectedTrack,\n                listOfTracksFromAPI: tracksResponse.data.items\n            })\n        });\n    }\n\n    function selectTrack(val) {\n        const currentTracks = [...tracks.listOfTracksFromAPI];\n        const trackInfo = currentTracks.filter(t => t.track.id === val);\n        if (!trackAlreadyIn(trackInfo[0].track.name)) {\n            console.log(\">>>\",trackInfo[0].track);\n            setTrackDetail(trackInfo[0].track);\n        } else {\n            console.log(\"track is already in the queue\");\n        }\n    }\n\n    async function addSongToTracklist(songName, songArtists, duration, songURL, trackID, trackImage) {\n        if (!trackAlreadyIn(songName)) {\n            console.log(\"adding: \" + songName + \"with id \" + trackID);\n            getAudioAnalysis(trackID, songName, songArtists, duration, songURL, trackImage);\n        } else {\n            console.log(\"track is already in the queue\");\n            setTrackDetail(null);\n        }\n    }\n\n    const getAudioAnalysis = (id, songName, songArtists, duration, songURL, trackImage) => {\n        console.log(\"song id is \" + id);\n        axios(`https://api.spotify.com/v1/audio-analysis/${id}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(e => {\n            addToQueue(songName, songArtists, duration, songURL, e, trackImage);\n        }).catch(e => {\n            addToQueue(songName, songArtists, duration, songURL, \"NOTFOUND\", trackImage);\n            //! TODO DEAL WITH THIS PROPERLY\n        }).finally(() => {\n            setTrackDetail(null);\n        });\n    }\n\n    return (\n        <div>\n            <form onSubmit={playlistSearchClicked}>\n                {nextSongInQueue() === null && <button type='submit' className=\"begin-mix\">BEGIN MIX</button>}\n                <div>\n                    <Listbox items={tracks.listOfTracksFromAPI} clicked={selectTrack} />\n                    {trackDetail && <TrackFinder name={trackDetail.name}\n                        artists={trackDetail.artists}\n                        duration_ms={trackDetail.duration_ms}\n                        trackID={trackDetail.id}\n                        trackImage={trackDetail.album.images[1]}\n                        foundSong={addSongToTracklist} />}\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default TrackSelector;\n","/Users/parssa/Desktop/repos/mixbot/src/TrackFinder.js",["99","100","101","102","103","104"],"/Users/parssa/Desktop/repos/mixbot/src/Credentials.js",[],"/Users/parssa/Desktop/repos/mixbot/src/TrackPlayer.js",["105","106","107","108","109","110"],"import React, { useEffect, useState } from 'react';\nimport Deck from \"./Deck\";\nimport './css_files/Queue.scss';\nimport { loadTrack, nextSongInQueue, thoughtType } from \"./Mixbot\";\n\n// let deck1playtime = NaN;\n// let deck2playtime = NaN;\n\nlet deck1startTime = 0;\nlet deck2startTime = 0;\n\nlet lastTrackSet = 0;\nlet mainTrack = 0;\n\nlet deck1lastBar = 0;\nlet deck2lastBar = 0;\n\nexport default function TrackPlayer({newThought}) {\n    const [clock, setClock] = useState();\n\n    const [deck1Song, setDeck1Song] = useState('');\n    const [deck2Song, setDeck2Song] = useState('');\n\n    const [deck1BPM, setDeck1BPM] = useState(0);\n    const [deck2BPM, setDeck2BPM] = useState(0);\n\n    const [deck1playback, setDeck1playback] = useState(1);\n    const [deck2playback, setDeck2playback] = useState(1);\n\n    const [deck1prepared, setDeck1prepared] = useState(false);\n    const [deck2prepared, setDeck2prepared] = useState(false);\n\n    const [deck1Playing, setDeck1Playing] = useState(false);\n    const [deck2Playing, setDeck2Playing] = useState(false);\n\n    const [deck1offset, setDeck1offset] = useState(0);\n    const [deck2offset, setDeck2offset] = useState(0);\n\n    useEffect(() => {\n        console.log(\"-----------------player did update!-----------------\");\n        if (!clock) {\n            let newClock = new AudioContext();\n            setClock(newClock);\n        } \n    })\n\n    useEffect(() => {\n        if (nextSongInQueue() !== null) {\n            console.log(\">>> theres a song in the queue!\", nextSongInQueue());\n            if ((deck1BPM == 0) && (deck1Song == '')) {\n                console.log(\">> putting it in track a\");\n                loadTrackA();\n            } else if ((deck2BPM == 0) && (deck2Song == '')) {\n                console.log(\">> putting it in track b\");\n                loadTrackB();\n            }\n        }\n    })\n\n    function loadTrackA() {\n        let newSong = loadTrack();\n        setDeck1prepared(false);\n        setDeck1Playing(false);\n        if (newSong !== null) {\n            setDeck1BPM(Math.round(newSong.songAnalysis.data.track.tempo)) // terribly sus\n            if (deck2Song === '') {\n                setDeck1playback(1);\n            } else {\n                if (deck2BPM !== 0) {\n                    let ratio = (deck2BPM / newSong.songAnalysis.data.track.tempo).toPrecision(5);\n                    setDeck1playback(ratio);\n                } else {\n                    setDeck1playback(1);\n                }\n            }\n            console.log(\"> , --------------------------->> \", newSong);\n            let think = \"Put \" + newSong.songName + \" on Deck A\";\n            newThought(think);\n            setDeck1Song(newSong);\n        }\n        else {\n            console.log(\"new song was null\");\n        }\n    }\n\n    function loadTrackB() {\n        let newSong = loadTrack();\n        setDeck2prepared(false);\n        setDeck2Playing(false);\n        if (newSong !== null) {\n            setDeck2BPM(Math.round(newSong.songAnalysis.data.track.tempo)) // terribly sus\n            console.log(\">>>>>            here comes the next song\", newSong);\n            if (deck1Song === '') {\n                setDeck2playback(1);\n            } else {\n                if (deck1BPM !== 0) {\n                    let ratio = (deck1BPM / Math.round(newSong.songAnalysis.data.track.tempo)).toPrecision(5);\n                    setDeck2playback(ratio);\n                } else {\n                    setDeck2playback(1);\n                }\n            }\n            let think = \"Put \" + newSong.songName + \" on Deck B\";\n            newThought(think);\n            setDeck2Song(newSong)\n        } else {\n            console.log(\"new song was null\");\n        }\n    }\n\n    function deckOneReady() {\n        if (!deck1prepared) {\n            setDeck1prepared(true);\n            console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> SETTING D1READY\");\n            if (!deck2Playing) {\n                console.log(\"telling deck 1 to play\");\n                setDeck1Playing(true);\n            }\n        }\n    }\n\n    function deckTwoReady() {\n        if (!deck2prepared) {\n            setDeck2prepared(true);\n            console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> SETTING D2READY\");\n            if (!deck1Playing) {\n                console.log(\"telling deck 2 to play\");\n                setDeck2Playing(true);\n            }\n        }\n    }\n\n    // function playDeck2SongScheduled(timeoutValue) {\n    //     console.log(\"setting timeout for:\", timeoutValue);\n    //     setTimeout(function () {\n    //         console.log(clock.currentTime, deck2playtime);\n    //         console.log(\"checkin time bois\", deck2playtime - clock.currentTime);\n    //         if (deck2playtime - clock.currentTime <= 0) {\n    //             deck2startTime = deck2playtime - clock.currentTime;\n    //             setDeck2Playing(true);\n    //         } else {\n    //             console.log(deck2playtime - clock.currentTime);\n    //             if ((deck2playtime - clock.currentTime) <= 0.5) {\n    //                 console.log(\"case a \");\n    //                 playDeck2SongScheduled(500);\n    //             } else {\n    //                 console.log(\"case b \");\n    //                 playDeck2SongScheduled((deck2playtime - clock.currentTime) / 2);\n    //             }\n    //         }\n    //     }, timeoutValue)\n    // }\n\n    function playTrackTwo() {\n        if (deck2prepared) {\n            console.log(\"+++ deck TWO is prepared, gonna play it!\");\n            setDeck2Playing(true);\n            setDeck2prepared(false);\n            if (lastTrackSet === 0) {\n                lastTrackSet = 2;\n                mainTrack = 1;\n            }\n        }\n    }\n\n    function playTrackOne() {\n        if (deck1prepared) {\n            console.log(\"+++ deck ONE is prepared, gonna play it!\");\n            setDeck1Playing(true);\n            setDeck1prepared(false);\n            if (lastTrackSet === 0) {\n                lastTrackSet = 1;\n                mainTrack = 1;\n            }\n\n        }\n    }\n\n    function hitBarD1() {\n        deck1lastBar = clock.currentTime;\n        if (deck2Playing) {\n            console.log(\"DECK1\", deck1offset);\n            setDeck1offset(deck2lastBar - deck1lastBar);\n        }\n    }\n\n    function hitBarD2() {\n        deck2lastBar = clock.currentTime;\n        if (deck1Playing) {\n            console.log(\"DECK2\", deck2offset);\n            setDeck2offset(deck1lastBar - deck2lastBar);\n        }\n    }\n\n    function changeTrackA() {\n        mainTrack = 2;\n        setDeck2playback(1);\n        loadTrackA();\n    }\n\n    function changeTrackB() {\n        mainTrack = 1;\n        setDeck1playback(1);\n        loadTrackB();\n    }\n\n    return (\n        <>\n            <div className={\"djboard\"}>\n                <div className={\"boardpanel\"} style={deck1Playing ? { boxShadow: \"0 3px 100px rgba(255, 99, 71, 0.3)\" } : { boxShadow: \"0 0 0 rgba(255, 99, 71, 0.3)\" }}>\n                    <h3>DECK A</h3>\n                    {deck1Song !== '' && <Deck\n                        thisSong={deck1Song.songURL}\n                        songName={deck1Song.songName}\n                        songArtist={deck1Song.songArtists[0].name}\n                        songImage={deck1Song.trackImage}\n                        songAnalysis={deck1Song.songAnalysis}\n                        playbackRate={deck1playback}\n                        prepared={deckOneReady}\n                        play={deck1Playing}\n                        startTime={deck1startTime}\n                        playOtherTrack={playTrackTwo}\n                        hitBar={hitBarD1}\n                        offset={deck1offset}\n                        deckName={\"Deck A\"}\n                        finished={changeTrackA}\n                        recommendedVolume={1}\n                        shouldSync={mainTrack !== 1}\n                        otherReady={deckTwoReady}\n                        waveformID={\"waveformA\"}\n                        bpm={deck1BPM}\n                    />\n                    }\n\n                </div>\n                <div className={\"boardpanel\"} style={deck2Playing ? { boxShadow: \"0 3px 100px rgba(255, 99, 71, 0.3)\" } : { boxShadow: \"0 0 0 rgba(255, 99, 71, 0.3)\" }}>\n                    <h3 style={{ textAlign: 'right' }}>DECK B</h3>\n                    {deck2Song !== '' && <Deck\n                        thisSong={deck2Song.songURL}\n                        songName={deck2Song.songName}\n                        songArtist={deck2Song.songArtists[0].name}\n                        songImage={deck2Song.trackImage}\n                        songAnalysis={deck2Song.songAnalysis}\n                        playbackRate={deck2playback}\n                        prepared={deckTwoReady}\n                        play={deck2Playing}\n                        startTime={deck2startTime}\n                        playOtherTrack={playTrackOne}\n                        hitBar={hitBarD2}\n                        offset={deck2offset}\n                        deckName={\"Deck B\"}\n                        finished={changeTrackB}\n                        recommendedVolume={1}\n                        shouldSync={mainTrack !== 2}\n                        otherReady={deckOneReady}\n                        waveformID={\"waveformB\"}\n                        bpm={deck2BPM}\n                    />}\n                </div>\n            </div>\n        </>\n    );\n}","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Detail.js",[],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Listbox.js",[],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Dropdown.js",["111"],"import React, {useState} from 'react';\n\nconst Dropdown = props => {\n\n    const dropdownChanged = e => {\n        props.changed(e.target.value);\n\n    }\n\n    return (\n        <div className=\"dropdown\">\n            <label>{props.label}</label>\n            <select value={props.selectedValue} onChange={dropdownChanged}>\n                <option key={0}>Select...</option>\n                {props.options.map((item, idx) => <option key={idx + 1} value={item.id}>{item.name}</option>)}\n            </select>\n        </div>\n    );\n}\n\nexport default Dropdown;\n","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Waveform.js",["112","113","114"],"import React, { useEffect, useRef, useState } from \"react\";\nimport WaveSurfer from 'wavesurfer.js';\n\n//https://codesandbox.io/s/audio-player-with-wavesurferjs-react-bd499?from-embed=&file=/src/Waveform.js:0-60\n\nexport default function Waveform({ url, onPositionChange, isPlaying, audioCtx, lowpassNum }) {\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlay] = useState(false);\n    const [volume, setVolume] = useState(0.5);\n    const formWaveSurferOptions = ref => ({\n        container: ref,\n        waveColor: \"#beb9b9\",\n        progressColor: \"#9a68c9\",\n        cursorColor: \"#dac4f0\",\n        hideScrollbar: true,\n        responsive: true,\n        partialRender: true,\n        normalize: true,\n        height:200\n    });\n\n    // create new WaveSurfer instance\n    // On component mount and when url changes\n    useEffect(() => {\n        setPlay(false);\n\n        const options = formWaveSurferOptions(waveformRef.current);\n        wavesurfer.current = WaveSurfer.create(options);\n        wavesurfer.current.load(url.src);\n        wavesurfer.current.on(\"ready\", function() {\n            // https://wavesurfer-js.org/docs/methods.html\n            // wavesurfer.current.play();\n            // setPlay(true);\n\n            // make sure object still available when file loaded\n            if (wavesurfer.current) {\n                wavesurfer.current.setVolume(volume);\n                setVolume(volume);\n            }\n            let lowpass = wavesurfer.backend.ac.createBiquadFilter();\n            lowpass.type = \"lowpass\";\n            lowpass.frequency.value = 10;\n            wavesurfer.current.backend.setFilter(lowpass);\n        });\n\n        // Removes events, elements and disconnects Web Audio nodes.\n        // when component unmount\n        return () => wavesurfer.current.destroy();\n    }, [url]);\n\n    useEffect(() => {\n        console.log(\"!!!\")\n        handlePlayPause();\n        console.log(wavesurfer.current.getFilters());\n        // if (isPlaying !== playing) {\n        //     handlePlayPause();\n        // }\n        // wavesurfer.current.on('audioprocess', function () {\n        //     // $('.waveform__counter').text( formatTime(wavesurfer.getCurrentTime()) );\n        //     // console.log(wavesurfer.current.getCurrentTime());\n        //     // console.log(\"--\")\n        //     onPositionChange(wavesurfer.current.getCurrentTime());\n        //\n        // });\n    }, [isPlaying]);\n\n    useEffect( () => {\n        console.log(\"lowpass\", lowpassNum);\n\n    }, [lowpassNum])\n\n\n    const handlePlayPause = () => {\n        console.log(\"switching this\");\n        setPlay(isPlaying);\n        wavesurfer.current.playPause();\n    };\n\n    // const onVolumeChange = e => {\n    //     const { target } = e;\n    //     const newVolume = +target.value;\n    //\n    //     if (newVolume) {\n    //         setVolume(newVolume);\n    //         wavesurfer.current.setVolume(newVolume || 1);\n    //     }\n    // };\n\n    return (\n        <div className={\"waveform-comp\"}>\n            <div id=\"waveform\" ref={waveformRef} />\n            <div className=\"controls\">\n                {/*<button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>*/}\n                {/*<input*/}\n                {/*    type=\"range\"*/}\n                {/*    id=\"volume\"*/}\n                {/*    name=\"volume\"*/}\n                {/*    // waveSurfer recognize value of `0` same as `1`*/}\n                {/*    //  so we need to set some zero-ish value for silence*/}\n                {/*    min=\"0.01\"*/}\n                {/*    max=\"1\"*/}\n                {/*    step=\".025\"*/}\n                {/*    onChange={onVolumeChange}*/}\n                {/*    defaultValue={volume}*/}\n                {/*/>*/}\n            </div>\n        </div>\n    );\n}",["115","116"],"/Users/parssa/Desktop/repos/mixbot/src/api/youtubeVideoContent.js",[],"/Users/parssa/Desktop/repos/mixbot/src/api/youtube.js",[],"/Users/parssa/Desktop/repos/mixbot/src/Deck.js",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Knob.js",[],"/Users/parssa/Desktop/repos/mixbot/src/api/keys.js",["130","131"],"const youtubeKey1 = \"AIzaSyC6F5gJnOX3mS2dl5-b_82PQ2ow7Xikuw8\"; // NotMixBot\n\nconst youtubeKey2 = \"AIzaSyCt7QrJ3-iInh6822WGi3Igo8J9gpH2WyA\"; // ThirdBot\n\nconst youtubeKey3 = \"AIzaSyBpT_RmX3P3wp_OMxiJT0SZIhkqFwMfVrA\"; // not set up yet\n\nexport const currentKey = youtubeKey3;","/Users/parssa/Desktop/repos/mixbot/src/frontend_components/Queue.js",[],"/Users/parssa/Desktop/repos/mixbot/src/Mixbot.js",["132"],"/Users/parssa/Desktop/repos/mixbot/src/Brain.js",[],"/Users/parssa/Desktop/repos/mixbot/src/helper_classes/Analyzer.js",["133","134","135","136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"146","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"142","severity":1,"message":"147","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"148","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"149","line":8,"column":27,"nodeType":"144","messageId":"145","endLine":8,"endColumn":38},{"ruleId":"142","severity":1,"message":"150","line":47,"column":14,"nodeType":"144","messageId":"145","endLine":47,"endColumn":26},{"ruleId":"142","severity":1,"message":"151","line":64,"column":14,"nodeType":"144","messageId":"145","endLine":64,"endColumn":29},{"ruleId":"142","severity":1,"message":"152","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"153","line":4,"column":17,"nodeType":"144","messageId":"145","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"154","line":4,"column":33,"nodeType":"144","messageId":"145","endLine":4,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":102,"column":8,"nodeType":"157","endLine":102,"endColumn":23,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":104,"column":15,"nodeType":"160","endLine":111,"endColumn":6},{"ruleId":"155","severity":1,"message":"161","line":111,"column":8,"nodeType":"157","endLine":111,"endColumn":36,"suggestions":"162"},{"ruleId":"142","severity":1,"message":"149","line":4,"column":38,"nodeType":"144","messageId":"145","endLine":4,"endColumn":49},{"ruleId":"155","severity":1,"message":"163","line":39,"column":5,"nodeType":"144","endLine":39,"endColumn":14,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":50,"column":27,"nodeType":"167","messageId":"168","endLine":50,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":50,"column":47,"nodeType":"167","messageId":"168","endLine":50,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":53,"column":34,"nodeType":"167","messageId":"168","endLine":53,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":53,"column":54,"nodeType":"167","messageId":"168","endLine":53,"endColumn":56},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"169","line":9,"column":12,"nodeType":"144","messageId":"145","endLine":9,"endColumn":19},{"ruleId":"155","severity":1,"message":"170","line":50,"column":8,"nodeType":"157","endLine":50,"endColumn":13,"suggestions":"171"},{"ruleId":"155","severity":1,"message":"172","line":66,"column":8,"nodeType":"157","endLine":66,"endColumn":19,"suggestions":"173"},{"ruleId":"138","replacedBy":"174"},{"ruleId":"140","replacedBy":"175"},{"ruleId":"142","severity":1,"message":"176","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":12},{"ruleId":"142","severity":1,"message":"177","line":108,"column":13,"nodeType":"144","messageId":"145","endLine":108,"endColumn":18},{"ruleId":"165","severity":1,"message":"178","line":209,"column":93,"nodeType":"167","messageId":"168","endLine":209,"endColumn":95},{"ruleId":"179","severity":1,"message":"180","line":543,"column":13,"nodeType":"181","endLine":543,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":544,"column":13,"nodeType":"181","endLine":544,"endColumn":45},{"ruleId":"179","severity":1,"message":"180","line":547,"column":13,"nodeType":"181","endLine":547,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":548,"column":13,"nodeType":"181","endLine":548,"endColumn":46},{"ruleId":"179","severity":1,"message":"180","line":550,"column":13,"nodeType":"181","endLine":550,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":551,"column":13,"nodeType":"181","endLine":551,"endColumn":45},{"ruleId":"179","severity":1,"message":"180","line":552,"column":13,"nodeType":"181","endLine":552,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":553,"column":13,"nodeType":"181","endLine":553,"endColumn":46},{"ruleId":"179","severity":1,"message":"180","line":577,"column":9,"nodeType":"181","endLine":577,"endColumn":41},{"ruleId":"142","severity":1,"message":"182","line":638,"column":10,"nodeType":"144","messageId":"145","endLine":638,"endColumn":17},{"ruleId":"142","severity":1,"message":"183","line":1,"column":7,"nodeType":"144","messageId":"145","endLine":1,"endColumn":18},{"ruleId":"142","severity":1,"message":"184","line":3,"column":7,"nodeType":"144","messageId":"145","endLine":3,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":84,"column":35,"nodeType":"167","messageId":"168","endLine":84,"endColumn":37},{"ruleId":"142","severity":1,"message":"185","line":76,"column":13,"nodeType":"144","messageId":"145","endLine":76,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":193,"column":49,"nodeType":"167","messageId":"168","endLine":193,"endColumn":51},{"ruleId":"165","severity":1,"message":"166","line":193,"column":90,"nodeType":"167","messageId":"168","endLine":193,"endColumn":92},{"ruleId":"165","severity":1,"message":"166","line":193,"column":129,"nodeType":"167","messageId":"168","endLine":193,"endColumn":131},{"ruleId":"165","severity":1,"message":"166","line":198,"column":55,"nodeType":"167","messageId":"168","endLine":198,"endColumn":57},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'Detail' is defined but never used.","'thoughtType' is defined but never used.","'genreChanged' is defined but never used.","'playlistChanged' is defined but never used.","'React' is defined but never used.","'end' is defined but never used.","'pattern' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videoIDtoMP3'. Either include it or remove the dependency array.","ArrayExpression",["188"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'createSearchQuery' and 'getYoutubeVideo'. Either include them or remove the dependency array.",["189"],"React Hook useEffect contains a call to 'setClock'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [clock] as a second argument to the useEffect Hook.",["190"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'playing' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'volume'. Either include it or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["191"],"React Hook useEffect has a missing dependency: 'handlePlayPause'. Either include it or remove the dependency array.",["192"],["186"],["187"],"'Knob' is defined but never used.","'dummy' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'closest' is defined but never used.","'youtubeKey1' is assigned a value but never used.","'youtubeKey2' is assigned a value but never used.","'currSection' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [chosenVideoID, videoIDtoMP3]",{"range":"203","text":"204"},"Update the dependencies array to be: [name, artists, duration_ms, createSearchQuery, getYoutubeVideo]",{"range":"205","text":"206"},"Add dependencies array: [clock]",{"range":"207","text":"208"},"Update the dependencies array to be: [url, volume]",{"range":"209","text":"210"},"Update the dependencies array to be: [handlePlayPause, isPlaying]",{"range":"211","text":"212"},[3772,3787],"[chosenVideoID, videoIDtoMP3]",[4065,4093],"[name, artists, duration_ms, createSearchQuery, getYoutubeVideo]",[1369,1369],", [clock]",[1849,1854],"[url, volume]",[2436,2447],"[handlePlayPause, isPlaying]"]